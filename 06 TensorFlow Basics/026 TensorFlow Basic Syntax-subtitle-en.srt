1
00:00:05,270 --> 00:00:10,580
Welcome everyone to this lecture on tents or flow basic syntax here we're going to learn the very basics

2
00:00:10,580 --> 00:00:11,290
of tensor flow.

3
00:00:11,290 --> 00:00:16,750
We'll start off by actually creating tensors just constant tensors and then we'll go into computations

4
00:00:16,820 --> 00:00:18,850
and then running a session intenser flow.

5
00:00:18,860 --> 00:00:21,160
Let's open up a Jupiter notebook and get started.

6
00:00:21,530 --> 00:00:21,890
All right.

7
00:00:21,890 --> 00:00:24,710
First thing we're going to do is import tensor flow.

8
00:00:25,340 --> 00:00:29,120
We're already pretty far into the course but now is the very first time we actually get to use tensor

9
00:00:29,120 --> 00:00:29,920
flow.

10
00:00:30,410 --> 00:00:32,490
And just to make sure you're using the same version.

11
00:00:32,510 --> 00:00:34,130
I am in the environment file.

12
00:00:34,130 --> 00:00:35,910
Go ahead and run this line right here.

13
00:00:36,050 --> 00:00:39,430
Print T.F. underscore underscore version underscore underscore.

14
00:00:39,560 --> 00:00:42,830
And it should have some variation of 1.3.

15
00:00:42,920 --> 00:00:47,590
So it doesn't matter if it says point 0 here at the end of that mixture using terms flow 1.3.

16
00:00:47,600 --> 00:00:50,180
Future versions like 1.4 and 1.5.

17
00:00:50,240 --> 00:00:53,000
They may have very small slight syntax changes.

18
00:00:53,030 --> 00:00:58,070
So since we are just learning tensor for and I don't want you to get hung up on small syntax changes

19
00:00:58,400 --> 00:01:00,400
go ahead and make sure using 1.3.

20
00:01:00,410 --> 00:01:04,790
Then once you fully understand tensor flow you can easily go on to a more updated version.

21
00:01:04,820 --> 00:01:08,950
In case you're watching this in the future let's start off by actually creating a tensor.

22
00:01:09,170 --> 00:01:13,750
So the word tensor it's basically just a fancy word for an end dimensional array.

23
00:01:13,850 --> 00:01:18,290
We'll start off by creating the most basic tensors possible and that is a constant.

24
00:01:18,350 --> 00:01:24,400
So I'm going to create a variable called hello and we'll say T.F. constant.

25
00:01:24,610 --> 00:01:26,530
I'm going to pass in a string here.

26
00:01:26,740 --> 00:01:31,180
We'll say hello and then I can actually have a space at the end and then I'm going to create another

27
00:01:31,190 --> 00:01:32,190
constant here.

28
00:01:32,220 --> 00:01:34,460
We'll call it world.

29
00:01:34,480 --> 00:01:40,180
It's also going to be T.F. dot constant and this will be as you may have guessed the string world.

30
00:01:40,750 --> 00:01:45,160
So if I take a look at what type of object this is it is not a String object.

31
00:01:45,160 --> 00:01:47,960
It is a tensor flow Python 3 ops.

32
00:01:47,980 --> 00:01:48,890
And then we have tensor.

33
00:01:48,910 --> 00:01:50,710
So this by itself is very Laury.

34
00:01:50,710 --> 00:01:53,140
Here is a tensor object.

35
00:01:53,140 --> 00:01:58,910
So as you may have guessed if I try to print the variable Hello I am not going to get a string.

36
00:01:58,930 --> 00:02:01,290
Instead it's going to say hey this is a tensor.

37
00:02:01,300 --> 00:02:05,460
It's a constant blah blah the data type inside of this tensor is a string.

38
00:02:05,470 --> 00:02:10,040
It's not actually going to print out the word hello in order to actually get hello to print.

39
00:02:10,110 --> 00:02:15,370
What we need to do is run this sort of operation inside of a session just like we did in our previous

40
00:02:15,430 --> 00:02:16,890
manual neural network.

41
00:02:16,900 --> 00:02:24,370
So the way we actually create a tensor flow session is with the following command we say with Ts dot

42
00:02:25,550 --> 00:02:31,860
session open and close parentheses as s e s s colon.

43
00:02:32,050 --> 00:02:37,210
And then you can have a block of code here indented and everything here inside of this or is just going

44
00:02:37,210 --> 00:02:37,780
to be.

45
00:02:37,780 --> 00:02:39,590
Flow operations that you run.

46
00:02:39,640 --> 00:02:44,680
And the reason we use this keyword with is because that makes sure that we don't have to actually close

47
00:02:44,680 --> 00:02:45,300
the session.

48
00:02:45,310 --> 00:02:46,810
So this kind of automatically opens.

49
00:02:46,810 --> 00:02:50,350
It runs the block of code and then closes the session.

50
00:02:50,350 --> 00:02:58,020
Let's go ahead and do a simple run command so say s e s s that run.

51
00:02:58,600 --> 00:03:00,430
And then I can create an operation here.

52
00:03:00,430 --> 00:03:05,850
So let's do a concatenation operation basically Hello Plus world.

53
00:03:05,920 --> 00:03:06,930
So we're going to run that.

54
00:03:07,150 --> 00:03:09,840
And since I actually didn't save it as a result let's run this again.

55
00:03:09,860 --> 00:03:18,220
But assign it to result and then outside of the session I can then print the result and it says hello

56
00:03:18,310 --> 00:03:20,350
world.

57
00:03:20,440 --> 00:03:24,910
And if you're wondering what this be represents right in front of the string it just represents in Python

58
00:03:24,910 --> 00:03:27,950
3 that this is a bytes literal.

59
00:03:28,290 --> 00:03:29,110
OK.

60
00:03:29,140 --> 00:03:33,780
And for our purposes we don't really need to concern ourselves too much with this be continuing on.

61
00:03:33,790 --> 00:03:37,690
Let's go ahead and explore the more basics of tensor flow.

62
00:03:37,870 --> 00:03:39,730
Let's perform another computation.

63
00:03:39,750 --> 00:03:41,340
Let's do something like addition.

64
00:03:41,350 --> 00:03:48,510
So I'm going to say is equal to C-f constants and I'm going to put a number here like 10.

65
00:03:48,580 --> 00:03:51,470
We're going to create another constant T.F. constants.

66
00:03:51,790 --> 00:03:57,830
Let's put 20 and then again if I checked the type of a it again is just a tensor.

67
00:03:58,090 --> 00:04:07,060
And if we do something like a plus b the result right now it says hey this is t T.F. tensor add shape

68
00:04:07,240 --> 00:04:09,760
data type integer 32.

69
00:04:09,760 --> 00:04:12,220
If I run this again a plus b.

70
00:04:12,250 --> 00:04:17,770
Notice here that it's saying it's ADD underscore 3 which means tensor flow is actually somehow in the

71
00:04:17,770 --> 00:04:22,230
background keeping track of this so it's actually numbering add 2 and 3.

72
00:04:22,250 --> 00:04:25,450
Or to copy this and run it again.

73
00:04:25,570 --> 00:04:28,390
It kind of keeps track of how many times are asking for this.

74
00:04:28,390 --> 00:04:33,400
Now keep in mind it hasn't actually executed these tasks because we didn't run them inside of a session.

75
00:04:33,430 --> 00:04:44,610
So it's actually run them instead of a sessional say with T.F. session SPSS say results is equal to

76
00:04:45,180 --> 00:04:46,390
session run.

77
00:04:46,650 --> 00:04:52,740
And then we can actually put the operation here a plus b then if I check out my results it's 30 10 plus

78
00:04:52,740 --> 00:04:53,800
20 is 30.

79
00:04:54,060 --> 00:04:56,360
OK so those are very basic computations.

80
00:04:56,580 --> 00:05:01,830
So let's go in and show you some more operations and these operations that are going to cover they're

81
00:05:01,830 --> 00:05:06,260
really more in line with kind of the tensor flow version of numpad operations.

82
00:05:06,270 --> 00:05:12,540
Remember with non-pay we were creating matrices like zeros ones random normal distributions random uniform

83
00:05:12,540 --> 00:05:13,540
distributions.

84
00:05:13,590 --> 00:05:18,480
So I'm going to create just a bunch of operations here that we can check out we're going to create a

85
00:05:18,480 --> 00:05:19,460
constant again.

86
00:05:20,980 --> 00:05:24,820
So we have a constant operation that's just for a constant number.

87
00:05:24,820 --> 00:05:31,740
Sometimes you need to have a matrix filled out so you say we'll see Phil Matt and then go and say yes

88
00:05:31,940 --> 00:05:36,640
fill and if you do shift enter here it says hey this is going to create a tensor remember that's just

89
00:05:36,640 --> 00:05:42,400
a fancy word for it in dimensional array filled for scalar value and then we're going to provide it

90
00:05:42,400 --> 00:05:43,060
with what it wants.

91
00:05:43,060 --> 00:05:45,170
It wants the dimensions and the value filled with.

92
00:05:45,190 --> 00:05:49,920
So we'll say hey give me a four by four filled with the value 10.

93
00:05:49,960 --> 00:05:51,730
So that's her filled matrix.

94
00:05:51,730 --> 00:05:57,040
Then we can say something like my zeros and then we have T.F. zeros that's another kind of quick operation

95
00:05:57,040 --> 00:05:58,270
tent's flow gives you.

96
00:05:58,290 --> 00:06:01,600
And again just creates a tensor of all elements set to zero.

97
00:06:01,600 --> 00:06:05,600
So let's give it the shape we'll again ask for a four by four.

98
00:06:05,680 --> 00:06:07,770
We're going to do the same thing for once as you may guess.

99
00:06:07,780 --> 00:06:14,740
T.F. ones and say Go ahead keep it four by four and I'll show you just a few random distributions that

100
00:06:14,740 --> 00:06:15,130
you can do.

101
00:06:15,130 --> 00:06:18,200
So there's a random normal distribution we'll call it my rant.

102
00:06:18,210 --> 00:06:21,790
And keep in mind everything on the left hand side of that equal sign is the variable name.

103
00:06:22,120 --> 00:06:27,490
And then we're going to say T.F. random and as we begin to type random you can see there's a ton of

104
00:06:27,490 --> 00:06:28,380
options here.

105
00:06:28,470 --> 00:06:31,970
Look spore the options as we need them throughout of course but ran them normal.

106
00:06:31,990 --> 00:06:33,950
That's kind of a more common one.

107
00:06:34,000 --> 00:06:38,590
So it just outputs random values from a normal distribution and you can actually provide the mean and

108
00:06:38,590 --> 00:06:40,660
standard deviation as well as the shape.

109
00:06:40,660 --> 00:06:44,980
So it's going to do that we'll just say we've been doing four by four for everything so let's continue

110
00:06:45,010 --> 00:06:48,070
that trend and actually just keep the defaults.

111
00:06:48,070 --> 00:06:52,500
But in case you want to specify it could say like I mean is equal to zero standard deviation.

112
00:06:52,510 --> 00:06:53,710
I forget what the default was.

113
00:06:53,710 --> 00:06:54,780
I think that's one point zero.

114
00:06:54,880 --> 00:07:00,730
You can obviously change that as you see fit and then a uniform distribution is also a very common distribution

115
00:07:00,730 --> 00:07:01,730
to be using.

116
00:07:01,750 --> 00:07:09,760
So I'll say at random and go if random uniform and it's the same thing as four by four.

117
00:07:10,000 --> 00:07:15,220
And for a random uniform instead of having a minor standard deviation it wants a minimum value and maximum

118
00:07:15,220 --> 00:07:21,250
value where you basically draw from that distribution from 0 to the max value or you know if you want

119
00:07:21,250 --> 00:07:23,560
a negative minimum value that's OK too.

120
00:07:23,560 --> 00:07:27,200
And it draws them in a uniform manner so a value is zero.

121
00:07:27,210 --> 00:07:29,700
Now I will say Max value is 1.

122
00:07:30,430 --> 00:07:33,070
OK so we have a bunch of operations here.

123
00:07:33,190 --> 00:07:35,070
None of these have really been executed yet.

124
00:07:35,110 --> 00:07:40,730
So if you just call for one of them like zeros you don't see anything it just says hey this is a tensor

125
00:07:40,730 --> 00:07:45,580
flow it's kind of just waiting for you to execute it or run it in a session.

126
00:07:45,640 --> 00:07:50,560
So I'm going to create a list here called my ops which is going to be full of these operations so I'll

127
00:07:50,560 --> 00:08:00,130
say whatever my cost was and say Phil Matt just using tabs or complete this quickly my zeros my ones

128
00:08:00,850 --> 00:08:04,370
my array and then and then my Ranz you.

129
00:08:04,810 --> 00:08:06,990
OK so now we have a list of all of these.

130
00:08:07,000 --> 00:08:09,940
So let's go ahead and run these inside of a session.

131
00:08:10,000 --> 00:08:14,380
So usually we're always going to be using this with T.F. session.

132
00:08:14,410 --> 00:08:16,970
That's pretty much how you always see in the documentation.

133
00:08:17,080 --> 00:08:20,730
But I do want to introduce you to something called an interactive session.

134
00:08:20,740 --> 00:08:24,630
It's pretty useful for notebook settings like this Jupiter notebook.

135
00:08:24,900 --> 00:08:30,070
It doesn't really have much use outside of a notebook setting the pinning on how you actually are coding

136
00:08:30,320 --> 00:08:32,950
tense or flow in whatever idea you're using.

137
00:08:32,950 --> 00:08:38,350
But basically if you use an interactive session it allows you to constantly call it throw out multiple

138
00:08:38,350 --> 00:08:39,600
cells.

139
00:08:39,670 --> 00:08:41,510
Let me show you how to do that.

140
00:08:41,650 --> 00:08:45,400
We really won't be using it throughout the course but in case you're interested in it now is a good

141
00:08:45,400 --> 00:08:46,980
time to introduce it to you.

142
00:08:47,020 --> 00:08:54,400
So you just say S E S S is equal to an interactive session and then basically the rest of these cells

143
00:08:54,460 --> 00:09:00,670
are going to kind of pretend that they're already being called with this with T.F. session.

144
00:09:00,760 --> 00:09:04,980
Again this interactive session really only useful for the notebook setting.

145
00:09:04,980 --> 00:09:16,450
So I'm going say for operation in that list my ops I'm going to say session run and then we'll say up

146
00:09:19,880 --> 00:09:22,310
let's actually print this out so we can see the results.

147
00:09:24,680 --> 00:09:25,230
Run that.

148
00:09:25,280 --> 00:09:26,750
And here we can see all the results.

149
00:09:26,750 --> 00:09:28,740
Let's add a new line in between them.

150
00:09:29,500 --> 00:09:31,480
So new line in between each result.

151
00:09:31,540 --> 00:09:32,170
And here we have it.

152
00:09:32,170 --> 00:09:36,620
So I can see that constant I can see that Phil matrix member was a four by four of tens.

153
00:09:36,730 --> 00:09:38,710
My zeros matrix ones matrix.

154
00:09:38,710 --> 00:09:40,880
And then my two ran the matrices.

155
00:09:40,900 --> 00:09:47,350
So again the reason I was able to do this outside of the actual session was because I had this interactive

156
00:09:47,350 --> 00:09:48,000
session.

157
00:09:48,190 --> 00:09:53,650
It's really useful for Egypt or know book environment but to kind of stick with the actual documentation

158
00:09:53,740 --> 00:09:58,630
and all the other examples you see online will pretty much always be using this with T.F. session unless

159
00:09:58,630 --> 00:10:01,660
it's a really quick job that I want to run between multiple cells.

160
00:10:01,660 --> 00:10:01,900
OK.

161
00:10:01,900 --> 00:10:08,590
So we just have sess run up something to note is that a lot of these operations they have an evil method

162
00:10:08,590 --> 00:10:09,240
on them.

163
00:10:09,400 --> 00:10:14,650
So we may see that in the future where instead of saying session that run and then you pasand the operation.

164
00:10:14,770 --> 00:10:21,520
Usually if you put it up and then start calling evil there's an evaluation method which is essentially

165
00:10:21,520 --> 00:10:26,370
telling it hey evaluate this operation and you get the exact same results when you run that.

166
00:10:26,620 --> 00:10:26,950
OK.

167
00:10:27,010 --> 00:10:32,200
So again typically we'll be saying session that run instead of calling them evil but kind of for something

168
00:10:32,530 --> 00:10:36,510
quick and dirty we may do an interactive session just do the evil.

169
00:10:36,580 --> 00:10:36,800
All right.

170
00:10:36,800 --> 00:10:40,060
Continuing on lesing I want to talk about matrix multiplication.

171
00:10:40,100 --> 00:10:41,810
We use matrix multiplication a lot.

172
00:10:41,810 --> 00:10:44,620
With neural networks especially our basic neural networks.

173
00:10:44,690 --> 00:10:49,170
So let's create a matrix Schalkwyk will have it be a constant.

174
00:10:49,400 --> 00:10:52,740
And we're going to feed this in as a kind of nested list.

175
00:10:52,880 --> 00:11:00,440
So I'll say one by two here comma and then let's go ahead and say three four is actually two by two

176
00:11:00,440 --> 00:11:05,610
Matrix but has one two on the top row three four on the bottom row just a nested list here.

177
00:11:05,630 --> 00:11:13,180
And then if I say a I can call get shape off of this and it says that the shape of this tensor is two

178
00:11:13,180 --> 00:11:14,300
by two which makes sense.

179
00:11:14,300 --> 00:11:21,700
So we provided there let's go ahead and give one more constant we'll say this constant is going to be

180
00:11:21,940 --> 00:11:23,830
let's have it be a 2 by 1.

181
00:11:24,040 --> 00:11:27,820
So I have the first number be 10 seconds to be 100.

182
00:11:27,820 --> 00:11:32,400
And this is where you may have to kind of refresh and linear algebra after we do this multiplication.

183
00:11:32,410 --> 00:11:34,240
But essentially we get the shape.

184
00:11:34,240 --> 00:11:35,620
This is a two by one.

185
00:11:35,620 --> 00:11:40,670
So I'm going to say my result is equal to T.F..

186
00:11:41,040 --> 00:11:42,660
Matt mole.

187
00:11:42,810 --> 00:11:48,160
Hopefully it looks a little familiar to you based off our basic neural network when we implemented it.

188
00:11:48,220 --> 00:11:54,820
So I have my results here and then I can say sess thought run result in it gives me back the actual

189
00:11:54,880 --> 00:11:55,510
array.

190
00:11:55,630 --> 00:11:59,560
So it multiplied this two by two array by these two by one.

191
00:11:59,590 --> 00:12:02,280
And as a result you get back to buy one.

192
00:12:02,350 --> 00:12:05,300
Now keep in mind usually you'd have to run this within a session.

193
00:12:05,320 --> 00:12:10,530
It's only because I called this interactive session that I'm able to run it between multiple cells.

194
00:12:10,570 --> 00:12:11,990
Pretty useful for you notebook.

195
00:12:12,190 --> 00:12:13,840
Not super useful anywhere else.

196
00:12:14,130 --> 00:12:14,680
OK.

197
00:12:14,920 --> 00:12:19,870
And one last reminder is I could've just said evil to see the results as well.

198
00:12:20,740 --> 00:12:23,050
That's the very basics of tensor flow syntax.

199
00:12:23,050 --> 00:12:27,410
I really hope that kind of felt pretty familiar especially after our manual neural that work.

200
00:12:27,490 --> 00:12:31,540
And you can see here tons of flow framework doing a lot of the heavy lifting behind the scenes for you

201
00:12:31,960 --> 00:12:36,190
main things you should have gotten out of this lecture is that you can create basic constants operations

202
00:12:36,280 --> 00:12:38,040
and then run them within a session.

203
00:12:38,050 --> 00:12:39,850
Thanks everyone and I'll see you at the next lecture.

